#ifndef _HASHING_H_INCLUDED_
#define _HASHING_H_INCLUDED_
#include "inventory.h"
#include "linearlist.h"
#include <math.h>
#include <string.h>
class Hashing
{
 private:
  int x;
  double A;
  int m;
 public:
  Hashing(int x,int m);
  long long int hashcode(char key[]);
  int map(long long int key);
}
Hashing::Hashing(int a,int b)
{
  x=a;
  m=b;
  A=0.61803398875;
}

long long int Hashing::hashcode(record a)
{
  long long int val=0;
  int l=strlen(a.item_num);
  for(int i=0;i<l;i++)
     val=val+((long long int)a.item_num[i])*(long long int)pow(x,i);
  return val;
}
int Hashing::map(long long int key)
{
  double val=key*A;
  double dec=val-floor(val);
  val=dec*m;
  return floor(val);
}

#endif
